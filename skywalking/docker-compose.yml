services:
  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: elasticsearch
    platform : ${PLATFORM}
    restart: always
    ports:
      - 9200:9200
    environment:
      - "TAKE_FILE_OWNERSHIP=true" #volumes 挂载权限 如果不想要挂载es文件改配置可以删除
      - "discovery.type=single-node" #单机模式启动
      - "TZ=Asia/Shanghai" # 设置时区
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # 设置jvm内存大小
    volumes:
      - ${DOCKER_DATA_PATH}/skywalking/elasticsearch/logs/:/usr/share/elasticsearch/logs/
      - ${DOCKER_DATA_PATH}/skywalking/elasticsearch/data/:/usr/share/elasticsearch/data/
      # - ${DOCKER_DATA_PATH}/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      # docker不能挂载文件
      # - ${DOCKER_DATA_PATH}/skywalking/elasticsearch/config/:/usr/share/elasticsearch/configuring_elasticsearch/
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:  # 网络配置
      - docker-dev-network  # 加入到 docker-dev-network 网络
  skywalking-oap-server:
    image: apache/skywalking-oap-server:8.9.1
    container_name: skywalking-oap-server
    platform : ${PLATFORM}
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    restart: always
    ports:
      - 11800:11800
      - 12800:12800
    environment:
      SW_STORAGE: elasticsearch  # 指定ES版本
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
      TZ: Asia/Shanghai
    networks:  # 网络配置
      - docker-dev-network  # 加入到 docker-dev-network 网络
    # volumes:
    #  - ${DOCKER_DATA_PATH}/oap/conf/alarm-settings.yml:/skywalking/config/alarm-settings.yml
    #  - ${DOCKER_DATA_PATH}/skywalking/oap/conf/:/skywalking/config/
  skywalking-ui:
    image: apache/skywalking-ui:8.9.1
    container_name: skywalking-ui
    platform : ${PLATFORM}
    depends_on:
      - skywalking-oap-server
    links:
      - skywalking-oap-server
    restart: always
    ports:
      - 18080:8080
    environment:
      SW_OAP_ADDRESS: http://skywalking-oap-server:12800
      TZ: Asia/Shanghai
    networks:  # 网络配置
      - docker-dev-network  # 加入到 docker-dev-network 网络

networks:  # 网络
  docker-dev-network:
      # 如果不存在,就注释external: true,那么会创建先该网络
      # 否则提示:network docker-dev-network declared as external, but could not be found
      external: true # 表示网络已存在,无需再次创建.